<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.moonkong</groupId>
  <artifactId>kcloud</artifactId>
  <packaging>pom</packaging>
  <version>1.0.0</version>
  <modules>
    <module>kcloud-umc</module>
    <module>kcloud-common</module>
    <module>kcloud-eureka</module>
  </modules>

  <properties>
    <spring-boot.version>2.0.7.RELEASE</spring-boot.version>
    <spring-cloud.version>Finchley.SR2</spring-cloud.version>
    <spring-platform.version>Cairo-SR6</spring-platform.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <spring-boot-admin.version>2.0.4</spring-boot-admin.version>
    <hutool.version>4.3.2</hutool.version>
    <mybatis-plus.version>3.0.6</mybatis-plus.version>
    <kaptcha.version>0.0.9</kaptcha.version>
    <swagger.version>2.9.2</swagger.version>
    <curator.version>2.10.0</curator.version>
    <velocity.version>1.7</velocity.version>
    <lcn.version>4.1.0</lcn.version>
    <jasypt.version>2.1.0</jasypt.version>
    <ttl.version>2.10.1</ttl.version>
    <elastic-job-lite.version>2.1.5</elastic-job-lite.version>
    <mysql.connector.version>8.0.13</mysql.connector.version>
    <security.oauth.version>2.3.3.RELEASE</security.oauth.version>
    <jackson.modules>2.9.6</jackson.modules>
    <activiti.version>5.22.0</activiti.version>
    <docker.url>http://192.168.0.13:4243</docker.url>
    <registry.url>192.168.0.13:5000</registry.url>
  </properties>

  <dependencies>
    <!--eureka 客户端-->
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
    </dependency>
    <!--断路器依赖-->
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
    </dependency>
    <!--Lombok-->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <scope>provided</scope>
    </dependency>
    <!--测试依赖-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>io.spring.platform</groupId>
        <artifactId>platform-bom</artifactId>
        <version>${spring-platform.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!--jackson模块-->
      <dependency>
        <groupId>com.fasterxml.jackson.module</groupId>
        <artifactId>jackson-modules-java8</artifactId>
        <version>${jackson.modules}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <finalName>${project.name}</finalName>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>${spring-boot.version}</version>
          <configuration>
            <finalName>${project.build.finalName}</finalName>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>repackage</goal><!--可以把依赖的包都打包到生成的Jar包中-->
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>com.spotify</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>0.4.12</version>
          <configuration>
            <imageName>${registry.url}/${project.name}:0.0.1</imageName>
            <dockerHost>${docker.url}</dockerHost>
            <dockerDirectory>${project.basedir}</dockerDirectory>
            <resources>
              <resource>
                <targetPath>/</targetPath>
                <directory>${project.build.directory}</directory>
                <include>${project.build.finalName}.jar</include>
              </resource>
            </resources>
            <serverId>docker-hub</serverId>
            <registryUrl>https://index.docker.io/v1/</registryUrl>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-pmd-plugin</artifactId>
          <version>3.8</version>
          <configuration>
            <rulesets>
              <ruleset>rulesets/java/ali-comment.xml</ruleset>
              <ruleset>rulesets/java/ali-concurrent.xml</ruleset>
              <ruleset>rulesets/java/ali-constant.xml</ruleset>
              <ruleset>rulesets/java/ali-exception.xml</ruleset>
              <ruleset>rulesets/java/ali-flowcontrol.xml</ruleset>
              <ruleset>rulesets/java/ali-naming.xml</ruleset>
              <ruleset>rulesets/java/ali-oop.xml</ruleset>
              <ruleset>rulesets/java/ali-orm.xml</ruleset>
              <ruleset>rulesets/java/ali-other.xml</ruleset>
              <ruleset>rulesets/java/ali-set.xml</ruleset>
            </rulesets>
            <printFailingErrors>true</printFailingErrors>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
          <dependencies>
            <!-- <dependency>
                 <groupId>com.alibaba.p3c</groupId>
                 <artifactId>p3c-pmd</artifactId>
                 <version>1.3.6</version>
             </dependency>-->
          </dependencies>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.0</version>
        <configuration>
          <target>${maven.compiler.target}</target>
          <source>${maven.compiler.source}</source>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>pl.project13.maven</groupId>
        <artifactId>git-commit-id-plugin</artifactId>
        <version>2.2.5</version>
      </plugin>
    </plugins>
  </build>

  <repositories>
    <!--阿里云主仓库，代理了maven central和jcenter仓库-->
    <repository>
      <id>aliyun</id>
      <name>aliyun</name>
      <url>https://maven.aliyun.com/repository/public</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <!--阿里云代理Spring 官方仓库-->
    <repository>
      <id>spring-milestones</id>
      <name>Spring Milestones</name>
      <url>https://maven.aliyun.com/repository/spring</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <!--私服厂库-->
    <!--<repository>-->
    <!--<id>pigx</id>-->
    <!--<name>pigx repository</name>-->
    <!--<url>http://nexus.gitee.wang/repository/maven-public</url>-->
    <!--<releases>-->
    <!--<enabled>true</enabled>-->
    <!--</releases>-->
    <!--<snapshots>-->
    <!--<enabled>false</enabled>-->
    <!--</snapshots>-->
    <!--</repository>-->
  </repositories>
  <pluginRepositories>
    <!--阿里云代理Spring 插件仓库-->
    <pluginRepository>
      <id>spring-plugin</id>
      <name>spring-plugin</name>
      <url>https://maven.aliyun.com/repository/spring-plugin</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>
</project>
